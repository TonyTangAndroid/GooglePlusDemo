name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - '*'

env:
  CI: true
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  TERM: dumb

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.java') }}

      - name: Assemble debug App apk
        run: |
          ./gradlew app:assembleDebug

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.java') }}

      - name: Run unit tests
        run: |
          ./gradlew test -PslimTests
      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit

  static-analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.java') }}
      - name: Cleanup secrets
        if: always()
        run: |
          rm -f app/src/prod/google-services.json
  instrumented-tests:
    name: Instrumented tests
    runs-on: macos-latest
    timeout-minutes: 25
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.java') }}

      - name: Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          arch: x86_64
          profile: Nexus 5X
          script: ./gradlew connectedCheck